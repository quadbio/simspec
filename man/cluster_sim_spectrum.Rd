% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/css.r, R/generics.r
\name{cluster_sim_spectrum.default}
\alias{cluster_sim_spectrum.default}
\alias{cluster_sim_spectrum.Seurat}
\alias{cluster_sim_spectrum}
\title{Calculate Cluster Similarity Spectrum}
\usage{
\method{cluster_sim_spectrum}{default}(
  object,
  dr = NULL,
  dr_input = NULL,
  num_pcs_compute = 50,
  num_pcs_use = 20,
  labels,
  redo_pca = FALSE,
  k = 20,
  min_batch_size = k * 2,
  ...,
  cluster_method = c("Seurat", "walktrap"),
  cluster_resolution = 0.6,
  spectrum_type = c("corr_ztransform", "corr_kernel", "corr_raw", "nnet", "lasso"),
  corr_method = c("spearman", "pearson"),
  use_fast_rank = TRUE,
  lambda = 50,
  threads = 1,
  train_on = c("raw", "pseudo", "rand"),
  downsample_ratio = 1/10,
  k_pseudo = 10,
  logscale_likelihood = F,
  merge_spectrums = FALSE,
  merge_height_prop = 1/10,
  spectrum_dist_type = c("pearson", "euclidean"),
  spectrum_cl_method = "complete",
  return_css_only = T,
  verbose = T
)

\method{cluster_sim_spectrum}{Seurat}(
  object,
  var_genes = NULL,
  use_scale = F,
  use_dr = "pca",
  dims_use = 1:20,
  label_tag,
  redo_pca = FALSE,
  redo_pca_with_data = FALSE,
  k = 20,
  min_batch_size = k * 2,
  ...,
  cluster_resolution = 0.6,
  spectrum_type = c("corr_ztransform", "corr_kernel", "corr_raw", "nnet", "lasso"),
  corr_method = c("spearman", "pearson"),
  lambda = 50,
  threads = 1,
  train_on = c("raw", "pseudo", "rand"),
  downsample_ratio = 1/10,
  k_pseudo = 10,
  logscale_likelihood = F,
  merge_spectrums = FALSE,
  merge_height_prop = 1/10,
  spectrum_dist_type = c("pearson", "euclidean"),
  spectrum_cl_method = "complete",
  reduction.name = "css",
  reduction.key = "CSS_",
  return_seuratObj = T,
  verbose = T
)

cluster_sim_spectrum(object, ...)
}
\arguments{
\item{object}{An object}

\item{dr}{Dimension reduction matrix used for clustering. When it is NULL, truncated PCA is run on the expression matrix for dimension reduction}

\item{dr_input}{Alternative expression matrix used for dimension reduction. Ignore if dr is specified}

\item{num_pcs_compute}{Number of PCs to calculate. Ignore if dr is specified}

\item{num_pcs_use}{Number of PCs used for clustering}

\item{labels}{Labels specifying different samples}

\item{redo_pca}{If TRUE, PCA is rerun for each sample separately for clustering}

\item{k}{Number of nearest neighbors of the kNN network used for clustering}

\item{min_batch_size}{The minimal cell number of a batch to be clustered to generate references}

\item{...}{Other parameters to build_knn_graph}

\item{cluster_method}{Method used to apply clustering to the kNN network. By default it calls FindClusters in Seurat using Louvain method. Alternative method is the walktrap community identification algorithm in igraph}

\item{cluster_resolution}{Resolution of clustering. Ignore if cluster_method is not Seurat}

\item{spectrum_type}{Method to normalize similarities. "corr_ztransform" uses z-transform; "corr_kernel" introduces correlation kernel to convert similarities to likelihood; "corr_raw" uses no normalization; "nnet" and "lasso" build probabilistic prediction model on the data and estimate likelihoods}

\item{corr_method}{Type of correlation. Ignore if spectrum_type is "nnet" or "lasso"}

\item{use_fast_rank}{When the presto package is available, use its rank_matrix function to rank sparse matrix}

\item{lambda}{Lambda in the correlation kernel}

\item{threads}{Number of threads to use. Only useful if spectrum_type is "lasso"}

\item{train_on}{Type of data used to train the likelihood model. Only useful if spectrum_type is "nnet" or "lasso"}

\item{downsample_ratio}{Downsample rate. Only useful if train_on is "pseudo" or "rand"}

\item{k_pseudo}{Number of nearest neighbors used to construct pseudocells. Only useful if train_on is "pseudo"}

\item{logscale_likelihood}{If TRUE, estimated likelihoods are log-transformed. Ignore if spectrum_type is "corr_ztransform" or "corr_raw"}

\item{merge_height_prop}{The height of dendrogram to cut. Ignore if merge_spectrum is FALSE}

\item{spectrum_dist_type}{Type of distance to construct the dendrogram of spectrums. Ignore if merge_spectrum is FALSE}

\item{spectrum_cl_method}{Method of hierarchical clustering to construct the dendrogram of spectrums. Ignore if merge_spectrum is FALSE}

\item{return_css_only}{If FALSE, not only the calculated CSS matrix, but also other information to recalculate the spectrum is returned}

\item{verbose}{If TRUE, progress message is provided}

\item{var_genes}{Genes used for similarity calculation. If NULL, predefined variable features are used}

\item{use_scale}{If TRUE, scale.data rather than data slot is used for similarity calculation}

\item{use_dr}{Name of reduction used for clustering}

\item{dims_use}{Dimensions in the reduction used for clustering}

\item{label_tag}{Column in the meta.data slot showing sample labels}

\item{redo_pca_with_data}{If TRUE, data slot is used to redo PCA for each sample. Ignore if redo_pca is FALSE}

\item{reduction.name}{Reduction name of the CSS representation in the returned Seurat object}

\item{reduction.key}{Reduction key of the CSS representation in the returned Seurat object}

\item{return_seuratObj}{If TRUE, a Seurat object with CSS added as one dimension reduction representation is returned. Otherwise, a list with CSS matrix and the calculation model is returned}

\item{merge_spectrum}{If TRUE, similar similarity spectrums are averaged}
}
\description{
Calculate Cluster Similarity Spectrum (CSS), given expression
of the data and cell labels used to distinguish samples. Clustering
is applied to cells of each sample separately, similarities of one cell
to those clusters are calculated and normalized.
}
